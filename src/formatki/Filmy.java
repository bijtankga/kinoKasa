/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formatki;

import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.PersistenceException;
import javax.persistence.TypedQuery;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Adrian
 */
public class Filmy extends javax.swing.JFrame {

    private EntityManagerFactory emf;
    DefaultListModel<kino.Film> filmListModel;
    
    /**
     * Creates new form Filmy
     */
    public Filmy() {
        initComponents();
        filmListModel = new DefaultListModel<>();
        filmList.setModel(filmListModel);
        getFilms();
    }
     private void getFilms()
    {
        EntityManager em=getEntityManager();
        TypedQuery<kino.Film> q;
        filmListModel.clear();
        try {
            q = em.createNamedQuery("Film.findAll", kino.Film.class);
            
            
            for(kino.Film film : q.getResultList())
            {
                filmListModel.addElement(film);
            }
        }
        catch(PersistenceException ex)
        {
            Logger.getLogger(Filmy.class.getName()).log(Level.SEVERE, null, ex);
            
            JOptionPane.showMessageDialog(null,"Błąd połączenia z bazą danych");
        }
        finally {
            em.close();
        }
    }
     

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        filmList = new javax.swing.JList<>();
        odznaczButton = new javax.swing.JButton();
        usunButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        nazwaText = new javax.swing.JTextField();
        rezyserText = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        opisText = new javax.swing.JTextArea();
        seanseButton = new javax.swing.JButton();
        zmienButton = new javax.swing.JButton();
        odswiezButton = new javax.swing.JButton();
        dodajButton = new javax.swing.JButton();
        dlugoscText = new javax.swing.JFormattedTextField();
        rokText = new javax.swing.JFormattedTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        zamknijMItem = new javax.swing.JMenuItem();
        zamknijOknoMItem = new javax.swing.JMenuItem();
        actionMenu = new javax.swing.JMenu();
        odswiezMItem = new javax.swing.JMenuItem();
        szuakjMItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Lista Filmów");
        setResizable(false);

        filmList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        filmList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                filmListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(filmList);

        odznaczButton.setText("Odznacz");
        odznaczButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                odznaczButtonActionPerformed(evt);
            }
        });

        usunButton.setText("Usuń");
        usunButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usunButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Tytuł");

        jLabel2.setText("Rok");

        jLabel3.setText("Reżyser");

        jLabel4.setText("Opis");

        jLabel5.setText("Długość");

        opisText.setColumns(20);
        opisText.setRows(5);
        jScrollPane2.setViewportView(opisText);

        seanseButton.setText("Seanse");
        seanseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seanseButtonActionPerformed(evt);
            }
        });

        zmienButton.setText("Zmień");
        zmienButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zmienButtonActionPerformed(evt);
            }
        });

        odswiezButton.setText("Odśwież");
        odswiezButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                odswiezButtonActionPerformed(evt);
            }
        });

        dodajButton.setText("Dodaj");
        dodajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dodajButtonActionPerformed(evt);
            }
        });

        dlugoscText.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        rokText.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        fileMenu.setText("File");

        zamknijMItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        zamknijMItem.setText("Zamknij Program");
        zamknijMItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zamknijMItemActionPerformed(evt);
            }
        });
        fileMenu.add(zamknijMItem);

        zamknijOknoMItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        zamknijOknoMItem.setText("Zamknij Okno");
        zamknijOknoMItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zamknijOknoMItemActionPerformed(evt);
            }
        });
        fileMenu.add(zamknijOknoMItem);

        jMenuBar1.add(fileMenu);

        actionMenu.setText("Action");

        odswiezMItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        odswiezMItem.setText("Odśwież");
        odswiezMItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                odswiezMItemActionPerformed(evt);
            }
        });
        actionMenu.add(odswiezMItem);

        szuakjMItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        szuakjMItem.setText("Szukaj");
        szuakjMItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                szuakjMItemActionPerformed(evt);
            }
        });
        actionMenu.add(szuakjMItem);

        jMenuBar1.add(actionMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(usunButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(odznaczButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(odswiezButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nazwaText)
                    .addComponent(rezyserText)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dodajButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(zmienButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 151, Short.MAX_VALUE)
                        .addComponent(seanseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rokText, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dlugoscText, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nazwaText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addComponent(dlugoscText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rokText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rezyserText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(seanseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(usunButton)
                        .addComponent(odznaczButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(zmienButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(odswiezButton)
                        .addComponent(dodajButton)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void odznaczButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_odznaczButtonActionPerformed
        // TODO add your handling code here:
        filmList.clearSelection();
    }//GEN-LAST:event_odznaczButtonActionPerformed

    private void usunButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usunButtonActionPerformed
        // TODO add your handling code here:
        EntityManager em = getEntityManager();
        kino.Film film = filmList.getSelectedValue();

        try{
            em.getTransaction().begin();
            film = em.find(film.getClass(), film.getId());
            em.remove(film);
            em.getTransaction().commit();
            filmListModel.removeElement(film);
        }
        catch (Exception ex)
        {
            if (em.getTransaction().isActive())
            em.getTransaction().rollback();
            JOptionPane.showMessageDialog(null,"Błąd przetwarzania żądania");
        }
        finally {
            em.close();
        }
    }//GEN-LAST:event_usunButtonActionPerformed

    private void filmListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_filmListValueChanged
        // TODO add your handling code here:
        kino.Film film = filmList.getSelectedValue();
        
        if (film == null)
        {
        dlugoscText.setText("");
        nazwaText.setText("");
        rezyserText.setText("");
        rokText.setText("");
        opisText.setText("");
        }
        else
        {
            dlugoscText.setText(film.getDlugosc().toString());
            nazwaText.setText(film.getNazwa());
            rezyserText.setText(film.getRezyser());
            rokText.setText(""+film.getRok());
            opisText.setText(film.getOpis());
        }
        
    }//GEN-LAST:event_filmListValueChanged

    private void odswiezButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_odswiezButtonActionPerformed
        // TODO add your handling code here:
        getFilms();
    }//GEN-LAST:event_odswiezButtonActionPerformed

    private void dodajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dodajButtonActionPerformed
        // TODO add your handling code here:
        EntityManager em = getEntityManager();
        kino.Film film = new kino.Film();

        try{
            film.setDlugosc( Long.parseLong(dlugoscText.getText()));
            if (film.getDlugosc() <= 0)
                throw new Exception();
            film.setNazwa( nazwaText.getText());
            if (film.getNazwa() == "")
                throw new Exception();
            film.setOpis(opisText.getText());
            film.setRezyser(rezyserText.getText());
            film.setRok( Short.parseShort(rokText.getText()));
            if (film.getRok() < 1887)
                throw new Exception();

            em.getTransaction().begin();
            em.persist(film);
            em.getTransaction().commit();

            filmListModel.addElement(film);
        }
        catch (Exception ex)
        {
            if (em.getTransaction().isActive())
            em.getTransaction().rollback();
            JOptionPane.showMessageDialog(null,"Błąd przetwarzania żądania");
        }
        finally {
            em.close();
        }
    }//GEN-LAST:event_dodajButtonActionPerformed

    private void zmienButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zmienButtonActionPerformed
        // TODO add your handling code here:
        EntityManager em = getEntityManager();

        try{
            em.getTransaction().begin();
            kino.Film film = em.find(kino.Film.class, filmList.getSelectedValue().getId());
            film.setDlugosc( Long.parseLong(dlugoscText.getText()));
            if (film.getDlugosc() <= 0)
                throw new Exception();
            film.setNazwa( nazwaText.getText());
            if (film.getNazwa() == "")
                throw new Exception();
            film.setOpis(opisText.getText());
            film.setRezyser(rezyserText.getText());
            film.setRok( Short.parseShort(rokText.getText()));
            if (film.getRok() < 1887)
                throw new Exception();
            
            em.getTransaction().commit();
        }
        catch (Exception ex)
        {
            if (em.getTransaction().isActive())
            em.getTransaction().rollback();
            JOptionPane.showMessageDialog(null,"Błąd przetwarzania żądania");
        }
        finally {
            em.close();
        }
    }//GEN-LAST:event_zmienButtonActionPerformed

    private void seanseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seanseButtonActionPerformed
        // TODO add your handling code here:
        if (filmList.isSelectionEmpty())
            return;
        new Seanse(filmList.getSelectedValue()).setVisible(true);
    }//GEN-LAST:event_seanseButtonActionPerformed

    private void zamknijMItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zamknijMItemActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_zamknijMItemActionPerformed

    private void zamknijOknoMItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zamknijOknoMItemActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_zamknijOknoMItemActionPerformed

    private void szuakjMItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_szuakjMItemActionPerformed
        // TODO add your handling code here:

        new RezerwacjeSzukaj().setVisible(true);
    }//GEN-LAST:event_szuakjMItemActionPerformed

    private void odswiezMItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_odswiezMItemActionPerformed
        getFilms();
    }//GEN-LAST:event_odswiezMItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Filmy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Filmy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Filmy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Filmy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Filmy().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu actionMenu;
    private javax.swing.JFormattedTextField dlugoscText;
    private javax.swing.JButton dodajButton;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JList<kino.Film> filmList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nazwaText;
    private javax.swing.JButton odswiezButton;
    private javax.swing.JMenuItem odswiezMItem;
    private javax.swing.JButton odznaczButton;
    private javax.swing.JTextArea opisText;
    private javax.swing.JTextField rezyserText;
    private javax.swing.JFormattedTextField rokText;
    private javax.swing.JButton seanseButton;
    private javax.swing.JMenuItem szuakjMItem;
    private javax.swing.JButton usunButton;
    private javax.swing.JMenuItem zamknijMItem;
    private javax.swing.JMenuItem zamknijOknoMItem;
    private javax.swing.JButton zmienButton;
    // End of variables declaration//GEN-END:variables

    
    private EntityManager getEntityManager() {
            if (emf==null) emf=Persistence.createEntityManagerFactory("kinoPU2");
            return emf.createEntityManager();
    }
}
