/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formatki;

import java.math.BigDecimal;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.PersistenceException;
import javax.persistence.TypedQuery;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Marcin
 */
public class Seanse extends javax.swing.JFrame {

    /**
     * Creates new form Seanse
     */
    private EntityManagerFactory emf;
    DefaultListModel<kino.Seans> seansListModel;
    kino.Film film;
    
    //public Seanse(Film film) {
    public Seanse(kino.Film film) {
        initComponents();
        
        this.film = film;
        
        tytulLabel.setText( "<html>" + film.getNazwa() + " (" + film.getRok() + ") </html>");
        
        
        //DateFormat hourFormat = new SimpleDateFormat("HH:mm");
        
        cenaText.setText("10,50");
        dataText.setText( new SimpleDateFormat("dd-MM-yyyy").format(new Date()));
        godzinaText.setText("12:00");
        
        //this.nrSeansu = nrSeansu;
        
        seansListModel = new DefaultListModel<>();
        seansList.setModel(seansListModel);
        
        getSeanss();
    }
    
    private EntityManager getEntityManager() {
            if (emf==null) emf=Persistence.createEntityManagerFactory("kinoPU");
            return emf.createEntityManager();
    }
    
    private void getSeanss()
    {
        EntityManager em=getEntityManager();
        TypedQuery<kino.Seans> q;
        seansListModel.clear();
        try {
            q = em.createNamedQuery("Seans.findByFilm", kino.Seans.class);
            q.setParameter("film",film);
            
            for(kino.Seans seans : q.getResultList())
            {
                seansListModel.addElement(seans);
            }
        }
        catch(PersistenceException ex)
        {
            Logger.getLogger(Seanse.class.getName()).log(Level.SEVERE, null, ex);
            
            JOptionPane.showMessageDialog(null,"Błąd połączenia z bazą danych");
        }
        finally {
            em.close();
        }
        
        skasujButton.setEnabled(false);
        rezerwacjeButton.setEnabled(false);
    }
    
    private Boolean czyWykupione()
    {
        if (seansList.isSelectionEmpty())
            return false;
        for (kino.Miejsce miejsce : seansList.getSelectedValue().getMiejsceCollection())
        {
            if (miejsce.getRezerwacja() != null)
            {
                if (miejsce.getRezerwacja().getKupione())
                {
                    return true;
                }
            }
        }
        return false;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        seansePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        seansList = new javax.swing.JList<>();
        skasujButton = new javax.swing.JButton();
        rezerwacjeButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        odswiezButton = new javax.swing.JButton();
        dodajSeansPanel = new javax.swing.JPanel();
        dataLabel = new javax.swing.JLabel();
        d3Check = new javax.swing.JCheckBox();
        cenaLabel = new javax.swing.JLabel();
        godzinaText = new javax.swing.JFormattedTextField();
        godzinaLabel = new javax.swing.JLabel();
        dataText = new javax.swing.JFormattedTextField();
        dodajButton = new javax.swing.JButton();
        cenaText = new javax.swing.JFormattedTextField();
        tytulLabel = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        zamknijMItem = new javax.swing.JMenuItem();
        zamknijOknoMItem = new javax.swing.JMenuItem();
        actionMenu = new javax.swing.JMenu();
        odswiezMItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Seanse");
        setResizable(false);

        seansePanel.setPreferredSize(new java.awt.Dimension(350, 522));

        seansList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                seansListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(seansList);

        skasujButton.setText("Skasuj");
        skasujButton.setEnabled(false);
        skasujButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skasujButtonActionPerformed(evt);
            }
        });

        rezerwacjeButton.setText("Rezerwacje");
        rezerwacjeButton.setEnabled(false);
        rezerwacjeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rezerwacjeButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Lista Seansów");

        odswiezButton.setText("Odśwież");
        odswiezButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                odswiezButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout seansePanelLayout = new javax.swing.GroupLayout(seansePanel);
        seansePanel.setLayout(seansePanelLayout);
        seansePanelLayout.setHorizontalGroup(
            seansePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(seansePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(seansePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(seansePanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(odswiezButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(seansePanelLayout.createSequentialGroup()
                        .addComponent(skasujButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addComponent(rezerwacjeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        seansePanelLayout.setVerticalGroup(
            seansePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(seansePanelLayout.createSequentialGroup()
                .addGroup(seansePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(odswiezButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(seansePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(skasujButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rezerwacjeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        dataLabel.setText("Data");

        d3Check.setText("Seans 3D");

        cenaLabel.setText("Cena Biletu");

        godzinaText.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("HH:mm"))));

        godzinaLabel.setText("Godzina");

        dataText.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd-MM-yyyy"))));

        dodajButton.setText("Dodaj Seans");
        dodajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dodajButtonActionPerformed(evt);
            }
        });

        cenaText.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));

        javax.swing.GroupLayout dodajSeansPanelLayout = new javax.swing.GroupLayout(dodajSeansPanel);
        dodajSeansPanel.setLayout(dodajSeansPanelLayout);
        dodajSeansPanelLayout.setHorizontalGroup(
            dodajSeansPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dodajSeansPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dodajSeansPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dodajSeansPanelLayout.createSequentialGroup()
                        .addGroup(dodajSeansPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(dodajSeansPanelLayout.createSequentialGroup()
                                .addGroup(dodajSeansPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(dataLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(godzinaLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(dodajSeansPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(godzinaText, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dataText, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(dodajSeansPanelLayout.createSequentialGroup()
                                .addComponent(cenaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(dodajSeansPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(d3Check, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cenaText))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(dodajButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        dodajSeansPanelLayout.setVerticalGroup(
            dodajSeansPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dodajSeansPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(dodajSeansPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dataLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dataText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dodajSeansPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(godzinaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(godzinaText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dodajSeansPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cenaText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cenaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(d3Check)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dodajButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tytulLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tytulLabel.setText("JAKIS FILM");

        fileMenu.setText("File");

        zamknijMItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        zamknijMItem.setText("Zamknij Program");
        zamknijMItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zamknijMItemActionPerformed(evt);
            }
        });
        fileMenu.add(zamknijMItem);

        zamknijOknoMItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        zamknijOknoMItem.setText("Zamknij Okno");
        zamknijOknoMItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zamknijOknoMItemActionPerformed(evt);
            }
        });
        fileMenu.add(zamknijOknoMItem);

        jMenuBar1.add(fileMenu);

        actionMenu.setText("Action");

        odswiezMItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        odswiezMItem.setText("Odśwież");
        odswiezMItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                odswiezMItemActionPerformed(evt);
            }
        });
        actionMenu.add(odswiezMItem);

        jMenuBar1.add(actionMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(seansePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(dodajSeansPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(64, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tytulLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(tytulLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90)
                .addComponent(dodajSeansPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(113, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(seansePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void odswiezButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_odswiezButtonActionPerformed
        // TODO add your handling code here:
        getSeanss();
    }//GEN-LAST:event_odswiezButtonActionPerformed

    private void dodajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dodajButtonActionPerformed
        // TODO add your handling code here:
        EntityManager em = getEntityManager();
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy HH:mm");
        kino.Seans seans = new kino.Seans();
        
        try {
            em.getTransaction().begin();
            seans.setFilm(film);
            seans.setData(sdf.parse( dataText.getText() + " " + godzinaText.getText()));
            seans.setCena(new BigDecimal( cenaText.getText().replace(",", ".")));
            seans.setD3(d3Check.isSelected());
            
            em.persist(seans);
            em.getTransaction().commit();
        }
        catch(PersistenceException ex)
        {
            if (em.getTransaction().isActive())
                em.getTransaction().rollback();
            Logger.getLogger(Seanse.class.getName()).log(Level.SEVERE, null, ex);
            
            JOptionPane.showMessageDialog(null,"Błąd połączenia z bazą danych");
        }
        catch (Exception ex)
        {
            if (em.getTransaction().isActive())
                em.getTransaction().rollback();
            JOptionPane.showMessageDialog(null,"Błąd przetwarzania żądania");
        }
        finally {
            em.close();
        }
        getSeanss();
    }//GEN-LAST:event_dodajButtonActionPerformed

    private void skasujButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skasujButtonActionPerformed
        // TODO add your handling code here:
        EntityManager em = getEntityManager();
        kino.Seans seans = seansList.getSelectedValue();
        
        try
        {
            if (czyWykupione())
            {
                JOptionPane.showMessageDialog(null,"Nie można usunąć, ktoś wykupił bilety");
                getSeanss();
                return;
            }
            em.getTransaction().begin();
            seans = em.find(seans.getClass(), seans.getId());
            em.remove(seans);
            em.getTransaction().commit();
            seansListModel.removeElement(seans);
            rezerwacjeButton.setEnabled(false);
            skasujButton.setEnabled(false);
        }
        catch(PersistenceException ex)
        {
            Logger.getLogger(Seanse.class.getName()).log(Level.SEVERE, null, ex);
            if (em.getTransaction().isActive())
                em.getTransaction().rollback();
            JOptionPane.showMessageDialog(null,"Błąd połączenia z bazą danych");
        }
        catch (Exception ex)
        {
            if (em.getTransaction().isActive())
                em.getTransaction().rollback();
            Logger.getLogger(Seanse.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,"Błąd przetwarzania żądania");
        }
        finally
        {
            em.close();
        }
    }//GEN-LAST:event_skasujButtonActionPerformed

    private void seansListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_seansListValueChanged
        // TODO add your handling code here:
        rezerwacjeButton.setEnabled(true);
        
        skasujButton.setEnabled(!czyWykupione());
    }//GEN-LAST:event_seansListValueChanged

    private void rezerwacjeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rezerwacjeButtonActionPerformed
        // TODO add your handling code here:
        Rezerwacje rezerwacje = new Rezerwacje(seansList.getSelectedValue());
        rezerwacje.setVisible(true);
    }//GEN-LAST:event_rezerwacjeButtonActionPerformed

    private void zamknijMItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zamknijMItemActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_zamknijMItemActionPerformed

    private void zamknijOknoMItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zamknijOknoMItemActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_zamknijOknoMItemActionPerformed

    private void odswiezMItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_odswiezMItemActionPerformed
        getSeanss();
    }//GEN-LAST:event_odswiezMItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Seanse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Seanse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Seanse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Seanse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EntityManager em=Persistence.createEntityManagerFactory("kinoPU").createEntityManager();
                kino.Film film;
                TypedQuery<kino.Seans> q;
                try{
                    q = em.createNamedQuery("Film.findById", kino.Seans.class);
                    q.setParameter("id", 2);
                    film = (kino.Film)q.getResultList().toArray()[0];
                }
                finally{
                    em.close();
                }
                
                new Seanse(film).setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu actionMenu;
    private javax.swing.JLabel cenaLabel;
    private javax.swing.JFormattedTextField cenaText;
    private javax.swing.JCheckBox d3Check;
    private javax.swing.JLabel dataLabel;
    private javax.swing.JFormattedTextField dataText;
    private javax.swing.JButton dodajButton;
    private javax.swing.JPanel dodajSeansPanel;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JLabel godzinaLabel;
    private javax.swing.JFormattedTextField godzinaText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton odswiezButton;
    private javax.swing.JMenuItem odswiezMItem;
    private javax.swing.JButton rezerwacjeButton;
    private javax.swing.JList<kino.Seans> seansList;
    private javax.swing.JPanel seansePanel;
    private javax.swing.JButton skasujButton;
    private javax.swing.JLabel tytulLabel;
    private javax.swing.JMenuItem zamknijMItem;
    private javax.swing.JMenuItem zamknijOknoMItem;
    // End of variables declaration//GEN-END:variables
}
